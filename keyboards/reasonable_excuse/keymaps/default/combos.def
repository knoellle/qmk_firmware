COMB(colon,           KC_COLN,    HMC_N, HMC_E)              // :
COMB(equals,          KC_EQL,     HMC_N, HMC_I)              // =
COMB(double_quote,    KC_DQUO,    HMC_I, HMC_O)              // "
COMB(backslash,       KC_BSLS,    HMC_N, HMC_O)              // \ text here to avoid warning

COMB(paren_left,      KC_LPRN,    KC_L, KC_U)                // (
COMB(paren_right,     KC_RPRN,    KC_U, KC_Y)                // )
SUBS(paren_pair,      "()",       KC_L, KC_U, KC_Y)          // ()

COMB(curly_left,      KC_LCBR,    KC_W, KC_F)                // {
COMB(curly_right,     KC_RCBR,    KC_F, KC_P)                // }
SUBS(curly_pair,      "{}",       KC_W, KC_F, KC_P)          // {}

COMB(bracket_left,    KC_LBRC,    KC_X, KC_C)                // [
COMB(bracket_right,   KC_RBRC,    KC_C, KC_D)                // ]
SUBS(bracket_pair,    "[]",       KC_X, KC_C, KC_D)          // []

SUBS(rot_robot,       "robot",    HMC_R, HMC_O, HMC_T)       // SUBS uses SEND_STRING to output the given string.

TOGG(ctrl_backspace,  L_MKT,      KC_M, HMC_T)               // toggles ctrl+backspace mode
